<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://java.sun.com/xml/ns/javaee"
   xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
   version="3.0">
   <display-name>fxp-webshinsei</display-name>
   <!-- Springとmybatisの配置ファイル -->
   <context-param>
       <param-name>contextConfigLocation</param-name>
       <param-value>
           classpath:spring/spring-biz.xml
     <!--       classpath:spring/spring-mybatis.xml -->
    <!--        classpath:spring/spring-security.xml -->
       </param-value>
   </context-param>
   <!-- HTMLエスケープ -->
   <context-param>
       <param-name>defaultHtmlEscape</param-name>
       <param-value>true</param-value>
   </context-param>
   <!-- コードフィルタ -->
   <filter>
       <filter-name>encodingFilter</filter-name>
       <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
       <async-supported>true</async-supported>
       <init-param>
           <param-name>encoding</param-name>
           <param-value>UTF-8</param-value>
       </init-param>
       <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
       </init-param>
   </filter>
   <filter-mapping>
       <filter-name>encodingFilter</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping>

   <!-- ファイルアップロード-->
   <filter>
     <filter-name>MultipartFilter</filter-name>
     <filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
   </filter>
   <filter-mapping>
     <filter-name>MultipartFilter</filter-name>
     <url-pattern>/*</url-pattern>
   </filter-mapping>

   <!-- 認証フィルタ -->
<!--    <filter>
       <filter-name>springSecurityFilterChain</filter-name>
       <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
   </filter>
   <filter-mapping>
       <filter-name>springSecurityFilterChain</filter-name>
       <url-pattern>/*</url-pattern>
   </filter-mapping> -->
    <!-- log4j -->
<!--     <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>6000</param-value>
    </context-param> -->

   <!-- Springモニター装置 -->
   <listener>
       <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>
   <!-- Springメモリあふれるの防止 -->
   <listener>
       <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
   </listener>
   <!-- セッションをRequestContextHolderから取得可能にする -->
   <listener>
       <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
   </listener>

   <!-- Spring MVC servlet -->
   <servlet>
       <servlet-name>SpringMVC</servlet-name>
       <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
       <init-param>
           <param-name>contextConfigLocation</param-name>
           <param-value>classpath:spring/spring-mvc.xml</param-value>
       </init-param>
       <load-on-startup>1</load-on-startup>
       <multipart-config>
             <max-file-size>104857600</max-file-size>
             <max-request-size>104857600</max-request-size>
             <file-size-threshold>0</file-size-threshold>
        </multipart-config>
   </servlet>
   <servlet-mapping>
       <servlet-name>SpringMVC</servlet-name>
       <!-- *.doの設定も可能-->
       <url-pattern>/</url-pattern>
   </servlet-mapping>

   <session-config>
     <session-timeout>30</session-timeout>
   </session-config>
</web-app>
